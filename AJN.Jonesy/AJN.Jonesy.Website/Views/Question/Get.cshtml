@using System.Text.RegularExpressions
@using AJN.Jonesy.Business
@model AJN.Jonesy.Model.Question

@{
    ViewBag.Title = Model.Text + " - Minecraft Answered";
    Layout = "~/Views/Shared/_QuestionLayout.cshtml";
    var longDatePattern = "yyyy/MM/dd";
    var fullDateTimePattern = "dd MMMM yyyy";
    var description = WebUtility.HtmlDecode(Regex.Replace(Model.Text + " " + Model.Answer.Text + " " + Model.Answer.Details, "<[^>]*(>|$)", string.Empty));
}

@section Head {
    <meta name="twitter:title" property="og:title" itemprop="title name" content="@ViewBag.Title" />
    <meta name="twitter:description" property="og:description" itemprop="description" content="@description "/>
    <meta name="description" content="@description">
    <meta property="og:url" content="http://minecraftanswered.imbick.com@(QuestionUrlParser.Generate(Model))" />
}

<div class="column" itemscope itemtype="http://schema.org/Question">
    <h1 itemprop="name">
        <a href="@QuestionUrlParser.Generate(Model)" class="question-hyperlink">@Model.Text</a>
    </h1>
    <div class="audit">
        Asked on <span itemprop="dateCreated" title="@Model.Audit.Created.On.ToString(fullDateTimePattern)">@Model.Audit.Created.On.ToString(longDatePattern)</span> by <span itemprop="creator">Admin</span>
    </div>
    <span style="display:none;" itemprop="answerCount">1</span>
</div>

<div itemscope itemtype="http://schema.org/Answer">
    <div class="strip">
        <div class="column answer" itemprop="text">
            @Html.Raw(Model.Answer.Text)
        </div>
    </div>

    <div class="column">

        <div class="details">
            @if (!string.IsNullOrEmpty(Model.Answer.Details)) {
                <h2>More details</h2>
                @Html.Raw(Model.Answer.Details)
            }
            
            @if (Model.Answer.HasSources) {
                    <h2>Source</h2>
                    foreach (var source in Model.Answer.Sources) {
                        Html.RenderPartial("_AnswerSource", source);
                    }
            }
        </div>

        <div class="audit answered">
            Answered on <span itemprop="dateCreated" title="@Model.Audit.Created.On.ToString(fullDateTimePattern)">@Model.Audit.Created.On.ToString(longDatePattern)</span> by <span itemprop="creator">Admin</span>
        </div>
        @*if (Model.Audit.IsVerified) {
        <div class="audit verified">
            Verified on <span title="@Model.Audit.Verified.On.ToString(fullDateTimePattern)">@Model.Audit.Verified.On.ToString(longDatePattern)</span> by <span>Admin</span> in version <span>@Model.Audit.Verified.Version.ReleaseNumber</span>
        </div>
    } else {
        <div class="audit unverified">
            Currently unverified
        </div>
    }*@

    </div>
</div>

<div class="column">
    <div class="leaderboard-advert">
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Minecraft Answered responsive -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-7142257795026948"
             data-ad-slot="5821988434"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>

    <div class="links">
        <h2>Similar questions</h2>
        <ul>
            @foreach (var question in Model.SimilarQuestions) {
                <li>
                    <a href="@QuestionUrlParser.Generate(question)">@question.Text</a>
                </li>
            }
        </ul>

        @if (Model.EquivalentQuestions.Any()) {
            <a href="/redirects/@Model.Id/@QuestionUrlParser.GenerateTitle(Model)">Which questions redirect here?</a>
        }
    </div>
</div>